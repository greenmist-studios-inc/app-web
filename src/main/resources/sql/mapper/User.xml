<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.greenmist.persistence.mapper.UserMapper">

    <resultMap type="User" id="UserResultMap">
        <id column="id" property="id" javaType="int"/>
        <result column="name" property="name"/>
        <result column="first_name" property="firstName"/>
        <result column="last_name" property="lastName"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
    </resultMap>

    <select id="getUserById" resultMap="UserResultMap" parameterType="long">
        SELECT id, first_name, last_name, email, password
        FROM app.user
        WHERE id=#{id}
        LIMIT 1
    </select>

    <select id="getUserByEmail" resultMap="UserResultMap" parameterType="String">
        SELECT id, first_name, last_name, email, password
        FROM app.user
        WHERE email=#{email}
        LIMIT 1
    </select>

    <insert id="insertUser" parameterType="User">
        INSERT INTO app.user (first_name, last_name, email, password)
        VALUES (#{user.firstName}, #{user.lastName}, #{user.email}, #{password})
    </insert>

    <update id="updateLastLogin" parameterType="long">
        UPDATE app.user
        SET last_logged_in = CURRENT_TIMESTAMP
        WHERE id=#{id}
    </update>

    <update id="updatePassword" parameterType="User">
        UPDATE app.user
        SET password = #{password},
         last_password_change = CURRENT_TIMESTAMP
        WHERE id=#{user.id}
    </update>

    <update id="updateUser" parameterType="User">
        UPDATE app.user
        SET first_name = #{user.firstName},
         last_name = #{user.lastName},
         email = #{user.email}
        WHERE id=#{user.id}
    </update>

    <select id="getUserFromAuthToken" resultMap="UserResultMap" parameterType="String">
        SELECT u.id, u.first_name, u.last_name, u.email, u.password
        FROM app.user u, app.auth_token auth_token
        WHERE auth_token.token = #{token} AND u.id = auth_token.user_id
        LIMIT 1
    </select>

    <select id="getUserFromResetPasswordToken" resultMap="UserResultMap" parameterType="String">
        SELECT u.id, u.first_name, u.last_name, u.email, u.password
        FROM app.user u, app.reset_password_token token
        WHERE token.token = #{token} AND u.id = token.user_id
        LIMIT 1
    </select>
</mapper>